name: Deploy Client Repository

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      directory:
        required: true
        type: string
    secrets:
      SERVER_HOST:
        required: true
      SERVER_USERNAME:
        required: true
      SERVER_PASSWORD:
        required: true

jobs:
  connect_ssh:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup SSH connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ github.event.inputs.directory }}

  enable_maintenance:
    runs-on: ubuntu-latest
    needs: connect_ssh
    steps:
      - name: Enable Maintenance Mode
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Resetting repository state"
            cd ${{ github.event.inputs.directory }}
            php -d memory_limit=3096M bin/magento maintenance:enable

  git_checkout:
    runs-on: ubuntu-latest
    needs: enable_maintenance
    steps:
      - name: Git checkout
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Resetting repository state"
            cd ${{ github.event.inputs.directory }}
            echo "git fetch"
            git fetch origin
            echo "git reset"
            git reset --hard
            echo "git checkout"
            git checkout -f ${{ github.event.inputs.branch }}
            echo "git pull"
            git pull origin ${{ github.event.inputs.branch }}


  composer_install:
    runs-on: ubuntu-latest
    needs: git_checkout
    steps:
      - name: Composer Install
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Run Composer install"
            cd ${{ github.event.inputs.directory }}
            composer install

  magento_upgrade:
    runs-on: ubuntu-latest
    needs: composer_install
    steps:
      - name: Run bin/magento setup:upgrade
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Run bin/magento setup:upgrade"
            cd ${{ github.event.inputs.directory }}
            php -d memory_limit=3096M bin/magento setup:upgrade

  di_and_static_compile:
    runs-on: ubuntu-latest
    needs: magento_upgrade
    steps:
      - name: Run bin/magento setup:di:compile and setup:static-content:deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Run bin/magento setup:di:compile and setup:static-content:deploy"
            cd ${{ github.event.inputs.directory }}
            rm -rf generated/*
            php -d memory_limit=3096M bin/magento setup:di:compile
            rm -rf pub/static/*
            php -d memory_limit=3096M bin/magento setup:static-content:deploy -f en_GB en_US
  
  

  disable_maintenance:
    runs-on: ubuntu-latest
    needs: di_and_static_compile
    steps:
      - name: Disable Maintenance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Disable maintenance mode"
            cd ${{ github.event.inputs.directory }}
            php -d memory_limit=3096M bin/magento maintenance:disable
