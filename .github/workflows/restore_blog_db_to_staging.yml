name: Restore DB from staging to live

on:
  workflow_call:
    inputs:
      live_directory:
        required: true
        type: string
      staging_directory:
        required: true
        type: string
      blog_theme_name:
        required: true
        type: string
    secrets:
      SERVER_HOST:
        required: true
      SERVER_USERNAME:
        required: true
      SERVER_PASSWORD:
        required: true
      DIR:
        required: true

jobs:
  parse_db_conn_staging:
    runs-on: ubuntu-latest
    steps:
      - name: Parse DB Connection Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ github.event.inputs.staging_directory }}
            php -r "\$c=require 'wp-config.php'; 
                     \$envContent = 'STAGING_BLOG_DB_NAME='. DB_NAME .\"\n\".
                                   'STAGING_BLOG_DB_USER='.DB_USER.\"\n\".
                                   'STAGING_BLOG_DB_PASS='.DB_PASSWORD.\"\n\";
                     file_put_contents('/tmp/staging_blog_db_config.env', \$envContent);"

  parse_db_conn_live:
    runs-on: ubuntu-latest
    steps:
      - name: Parse DB Connection Live
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ github.event.inputs.live_directory }}
            php -r "\$c=require 'wp-config.php'; 
                     \$envContent = 'LIVE_BLOG_DB_NAME='. DB_NAME .\"\n\".
                                   'LIVE_BLOG_DB_USER='.DB_USER.\"\n\".
                                   'LIVE_BLOG_DB_PASS='.DB_PASSWORD.\"\n\";
                     file_put_contents('/tmp/live_blog_db_config.env', \$envContent);"

  create_staging_blog_db_dump:
    runs-on: ubuntu-latest
    needs:
      - parse_db_conn_live
      - parse_db_conn_staging
    steps:
      - name: Create staging blog db dump
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -a
            source /tmp/staging_blog_db_config.env
            set +a
            cd ${{ github.event.inputs.staging_directory }}
            mysqldump -u${STAGING_BLOG_DB_USER} -p${STAGING_BLOG_DB_PASS} ${STAGING_BLOG_DB_NAME} > stagingBlogDBDump.sql
            cat stagingBlogDBDump.sql | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\*/\*/' > stagingBlogDBDumpWithoutDefiner_"`date +"%d-%m-%Y"`".sql
            rm stagingBlogDBDump.sql
            find -name "staging*.sql" -type f -mtime +14 -delete

  create_live_blog_db_dump:
    runs-on: ubuntu-latest
    needs:
      - parse_db_conn_live
      - parse_db_conn_staging
    steps:
      - name: Create live blog db dump
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -a
            source /tmp/live_blog_db_config.env
            set +a
            cd ${{ github.event.inputs.staging_directory }}
            mysqldump -u${LIVE_BLOG_DB_USER} -p${LIVE_BLOG_DB_PASS} ${LIVE_BLOG_DB_NAME} > currentLiveBlogDBDump.sql
            cat currentLiveBlogDBDump.sql | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\*/\*/' > currentLiveBlogDBDumpWithoutDefiner.sql

  restore_live_db_backup_to_staging:
    runs-on: ubuntu-latest
    needs:
      - create_live_blog_db_dump
      - create_staging_blog_db_dump
    steps:
      - name: Restore Live DB Backup To Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -a
            source /tmp/staging_db_config.env
            set +a
            cd ${{ github.event.inputs.staging_directory }}
            mysql -u${STAGING_BLOG_DB_USER} -p${STAGING_BLOG_DB_PASS} ${STAGING_BLOG_DB_NAME} < currentLiveBlogDBDumpWithoutDefiner.sql
            rm currentLiveBlogDBDumpWithoutDefiner.sql

  copy_media_from_live_to_staging:
    runs-on: ubuntu-latest
    needs: restore_live_db_backup_to_staging
    steps:
      - name: Copy Blogs Media From Live To Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cp -r ${{ github.event.inputs.live_directory }}/wp-content/uploads/* ${{ github.event.inputs.staging_directory }}/wp-content/uploads/ 
            cp -r ${{ github.event.inputs.live_directory }}/wp-content/themes/${{ github.event.inputs.blog_theme_name }}/assets/img/* ${{ github.event.inputs.staging_directory }}/wp-content/themes/${{ github.event.inputs.blog_theme_name }}/assets/img/

  change_blog_db_variables:
    runs-on: ubuntu-latest
    needs: copy_media_from_live_to_staging
    steps:
      - name: Copy Blogs Media From Live To Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ github.event.inputs.staging_directory }}
            cd ../..
            php db-blog-updater.php
